Response Messages 

- The server will provide response messages after it recieves and interprets a request message from the client

Status-Line

- It represents the first line of the response messages, each element seperated by a SP characters consists protocol version, followed by a numeric status code with a textual phrase. It allowed the exclutions of CR or LF except in the last CRLF sequence.

- Status-Code element is represented by a 3 digit integer result code that symbolizes the kind of request. A reason-phrase gives a short description of Status-Code. The importance of Status-Code is it's use by the automata and Reason-Phrases intended for the human user.

- First digit of Status-Code symbolize the class of response.
      - x00: unrecognized response and it will not be cached, and should return an entity              to the user
      - 1xx: Informational - Request received, continuing process
      - 2xx: Success - The action was successfully received,
        understood, and accepted
      - 3xx: Redirection - Further action must be taken in order to
        complete the request
      - 4xx: Client Error - The request contains bad syntax or cannot
        be fulfilled
      - 5xx: Server Error - The server failed to fulfill an apparently
        valid request 

- Detailed Information about the Status Code

            "100"  : Continue
            "101"  : Switching Protocols
            "200"  : OK
            "201"  : Created
            "202"  : Accepted
            "203"  : Non-Authoritative Information
            "204"  : No Content
            "205"  : Reset Content
            "206"  : Partial Content
            "300"  : Multiple Choices
            "301"  : Moved Permanently
            "302"  : Found
            "303"  : See Other
            "304"  : Not Modified
            "305"  : Use Proxy
            "307"  : Temporary Redirect
            "400"  : Bad Request
            "401"  : Unauthorized
            "402"  : Payment Required
            "403"  : Forbidden
            "404"  : Not Found
            "405"  : Method Not Allowed
            "406"  : Not Acceptable
            "407"  : Proxy Authentication Required
            "408"  : Request Time-out
            "409"  : Conflict
            "410"  : Gone
            "411"  : Length Required
            "412"  : Precondition Failed
            "413"  : Request Entity Too Large
            "414"  : Request-URI Too Large
            "415"  : Unsupported Media Type
            "416"  : Requested range not satisfiable
            "417"  : Expectation Failed
            "500"  : Internal Server Error
            "501"  : Not Implemented
            "502"  : Bad Gateway
            "503"  : Service Unavailable
            "504"  : Gateway Time-out
            "505"  : HTTP Version not supported extension-code
          
      extension-code = 3DIGIT
      Reason-Phrase  = *<TEXT, excluding CR, LF>  


Response Header Field

- It contains the information about the server and about deeper access the resource identified byy Request-URI. Enables the server to pass extra information about the response and it is not availble to placed in the Status-Line. Its field names can extended reliably only in the combination, with a modified protocol version. But you can also create or experiment a header field with its proper semantics if all the joined parties in the comunication can recognize them to be as response-header fields. An unrecognized header fields are treated to be as entity-header fields.

      response-header  = Accept-Ranges            
                         Age                      
                         ETag                     
                         Location                 
                         Proxy-Authenticate       
                         Retry-After              
                         Server                   
                         Vary                     
                         WWW-Authenticate         


References:

Connolly, D.(2004, September 1). Hypertext Transfer Protocol -- HTTP/1.1. Retrieved from https://www.w3.org/Protocols/rfc2616/rfc2616-sec6.html
